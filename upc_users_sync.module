<?php 
/**
 * implementation of Hook_menu
 */
function upc_users_sync_menu() {
  $items = array();
  $items['users_sync'] = array(
    'title' => 'Crear cuenta',
    'page callback' => '_upc_users_sync_create',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['users_sync/user_spread'] = array(
    'title' => 'Spread Users',
    'page callback' => '_user_spread',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['users_sync/user_test'] = array(
    'title' => 'Test Users',
    'page callback' => '_user_test',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}
function _upc_users_sync_create() {
 $user = unserialize(bakery_decrypt($_POST['form']));
  $user = $user['#user'];
  $new_account = array(
    'name' => $user->name,
    'pass' => $user->pass,
    'mail' => $user->mail,
    'status' => 1,
    'init' => $user->mail,
    'timezone' => $user->timezone,
    'field_user_firstname' => array('und'=> array(0 => array('value' => $user->field_user_firstname['und'][0]['value']))),
    'field_user_lastname' => array('und'=> array(0 => array('value' => $user->field_user_lastname['und'][0]['value']))),
    'field_user_mother_lastname' => array('und'=> array(0 => array('value' => $user->field_user_mother_lastname['und'][0]['value']))),
    'field_user_mother_lastname' => array('und'=> array(0 => array('value' => $user->field_user_mother_lastname['und'][0]['value']))),
    'field_user_nationality' => array('und'=> array(0 => array('value' => $user->field_user_nationality['und'][0]['value']))),
    'field_user_sex' => array('und'=> array(0 => array('value' => $user->field_user_sex['und'][0]['value']))),

    //INFORMACION PERSONAL
    'field_document' => array('und'=> array(0 => array('value' => $user->field_document['und'][0]['value']))),
    //'field_document_type_term' => array('und'=> array(0 => array('tid' => $user->field_document_type_term['und'][0]['tid']))),
    'field_user_birthday' => array('und'=> array(0 => array('value' => $user->field_user_birthday['und'][0]['value']))),
    'field_user_birthday' => array('und'=> array(0 => array('timezone' => $user->field_user_birthday['und'][0]['timezone']))),
    'field_user_birthday' => array('und'=> array(0 => array('date_type' => $user->field_user_birthday['und'][0]['date_type']))),
    //'field_user_grade_term' => array('und'=> array(0 => array('tid' => $user->field_user_grade_term['und'][0]['tid']))),
    //'field_user_address_via' => array('und'=> array(0 => array('tid' => $user->field_user_grade_term['und'][0]['tid']))),
    'field_user_address' => array('und'=> array(0 => array('value' => $user->field_user_address['und'][0]['value']))),
    'field_user_address_urba' => array('und'=> array(0 => array('value' => $user->field_user_address_urba['und'][0]['value']))),
    //'field_user_address_ubigeo' => array('und'=> array(0 => array('tid' => $user->field_user_address_ubigeo['und'][0]['tid']))),
    'field_user_address_city' => array('und'=> array(0 => array('value' => $user->field_user_address_city['und'][0]['value']))),
    'field_user_phone' => array('und'=> array(0 => array('value' => $user->field_user_phone['und'][0]['value']))),
    'field_user_mobile_phone' => array('und'=> array(0 => array('value' => $user->field_user_mobile_phone['und'][0]['value']))),

    //INFORMACION LABORAL
    'field_user_business_name' => $user->field_user_business_name,
    'field_user_business_doc_type' => $user->field_user_business_doc_type,
    'field_user_business_document' => $user->field_user_business_document,
    'field_user_business_hq_via' => $user->field_user_business_hq_via,
    'field_user_business_hq_address' => $user->field_user_business_hq_address,
    'field_user_business_hq_urba' => $user->field_user_business_hq_urba,
    'field_user_business_hq_ubigeo' => $user->field_user_business_hq_ubigeo,
    'field_user_business_hq_city' => $user->field_user_business_hq_city,
    'field_user_business_hq_phone' => $user->field_user_business_hq_phone,
    'field_user_level_charge' => $user->field_user_level_charge,
    'field_user_charge' => $user->field_user_charge,
    'field_user_work_area_term' => $user->field_user_work_area_term,
    'field_user_business_mail' => $user->field_user_business_mail,

    //AREA DE INTERES
  );
  error_log(print_r($user,1));
  error_log('                ||  ');
  error_log('                ||  ');
  error_log('                ||  ');
  error_log('                ||  ');
  error_log('                \/  ');
  $account = user_save(NULL, $new_account);
  error_log(print_r($account,1));
  return 'hola';
}

/**
 * Send user information to all sites.
 */
function _user_register_submit($form, &$form_state) {
  $sites = array_merge(_get_slaves(), array(_get_master())); 
  $local = 'http://' .  $_SERVER['SERVER_NAME'] . '/';
  foreach($sites as $site) {
    if($site != $local) {
      _post_curl($form, $site . 'users_sync');
    }
  }
}
/**
 * Implementation of hook_form_alter
 * Triggers _user_check function when submitting the register form
 */
function upc_users_sync_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'user_register_form') {
    $form['#submit'] = array();
    //overrides default and bakery submit functions
    //default, graba en local
    $form['#submit'][] = 'user_register_submit';  
    //graba en los demas
    $form['#submit'][] = '_user_register_submit'; 
  }
}

function _post_curl($form,  $url) {
  //cURL version
  $curl = curl_init();
  curl_setopt_array($curl, array(
    CURLOPT_RETURNTRANSFER => 1,
    CURLOPT_URL => $url ,
    CURLOPT_POST => 1,
    CURLOPT_POSTFIELDS => array(
        'url' => 'http://' . $_SERVER['SERVER_NAME'] ,
        'form' => bakery_encrypt(serialize($form)),
    ),
  ));
  //curl_exec($curl);
  $resp = curl_exec($curl);
  if (!$resp) {
    drupal_set_message(t('Error %error for site at %url', array('%error' => curl_error($curl) .' '. curl_errno($curl), '%url' => $url)));
  } else {
    drupal_set_message($resp);
  }
}
/**
 * Create User Array
 * Collect information from cookies and post and create an user array
 * to be use in user_save function
 * @return array $user
 */
function _map_user($userinfo, $fields) {
  $user = array();

  //complete user information
  $user['init'] = $userinfo['info']; 
  foreach($fields as $label => $value) {
    $user[$label] = (!empty($userinfo[$label])) ? $userinfo[$label] : $value ;
  }
  if(!empty($userinfo['authname_bakery'])) {
    $user['authname_bakery'] = $userinfo['authname_bakery'];
  }
  return $user;
}
/**
 * List of available fields
 */
function _user_fields(){ 
  return array(
    'name',
    'mail',
    'pass',
    'timezone',
    'field_permission_marketing',
    'field_permission_marketing_epe',
    'field_permission_marketing_pos',
    'field_permission_marketing_pre',
    'field_reusable_observation',
    'field_user_address',
    'field_user_address_city',
    'field_user_address_ubigeo',
    'field_user_address_urba',
    'field_user_address_via',
    'field_user_birthday',
    'field_user_business_code',
    'field_user_business_doc_type',
    'field_user_business_document',
    'field_user_business_hq_address',
    'field_user_business_hq_city',
    'field_user_business_hq_code',
    'field_user_business_hq_name',
    'field_user_business_hq_phone',
    'field_user_business_hq_ubigeo',
    'field_user_business_hq_urba',
    'field_user_business_hq_via',
    'field_user_business_mail',
    'field_user_business_name',
    'field_user_courtesy_title_term',
    'field_user_firstname',
    'field_user_grade_term',
    'field_user_interest_area_term',
    'field_user_lastname',
    'field_user_charge',
    'field_user_level_charge',
    'field_user_mobile_phone',
    'field_user_mother_lastname',
    'field_user_nationality',
    'field_user_nick',
    'field_user_phone',
    'field_user_sex',
    'field_user_socrates_code',
  );
}
/**
 * Create or update User
 */
function _user_create($uid = null){
  if(!empty($uid)) {
    //update user
    $remote_user = _get_remote_user();
    $user = user_load($uid);
    //map information here

    #user_save($user);
    return $user->uid;
  } else {
    //create user
    $remote_user = _get_remote_user();

    #user_save($user);
    return $user->uid;
  }
}
/**
 * Slaves Sites
 * Sites where we want to create users
 * @return array of slave sites.
 */
function _get_slaves() {
  return variable_get('bakery_slaves', array());
}
/**
 * Master Site
 * @return string master site
 */
function _get_master() {
  return variable_get('bakery_master', 'http://www.upc.edu.pe/');
}
/**
 * Is Master?
 * Is this the master Site
 * @return TRUE/FALSE
 */
function _is_master() {
  return variable_get('bakery_is_master', 0);
}
